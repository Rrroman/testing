{"version":3,"sources":["components/Fruit/Fruit.module.css","containers/App.module.css","components/Snake/Snake.module.css","constants/constants.js","components/Snake/Snake.js","components/Fruit/Fruit.js","components/Controls/Controls.js","assets/bite.mp3","containers/App.js","reportWebVitals.js","index.js","components/Controls/Controls.module.css"],"names":["module","exports","constants","SIZE","FIELD_SIZE","SPEED","SPEED_FAST","SPEED_STEP","MAX_POSITION","MIN_POSITION","TOP","RIGHT","LEFT","BOTTOM","SPACE_BETWEEN_SNAKE_PIECES","STARTING_SNAKE_POSITION","FRUIT_POSITION","Math","floor","random","Snake","props","snakePosition","map","snakePiece","index","arr","StartPositionStyles","left","top","width","size","height","transform","direction","length","className","classes","snake__piece","snake__head","isGameOver","snake__head_dead","style","Fruit","fruitPositionStyle","fruitPosition","fruit","Controls","volumeIcon","isVolume","color","controls__wrapper","controls__score","score","onClick","clicked","volumeToggle","controls__volume","App","state","speed","isGamePause","audio","Audio","biteSound","fieldStyles","maxWidth","moveSnake","clearInterval","intervalId","newIntervalId","setInterval","setState","snakeCoordinates","headCoordinates","push","shift","checkWallSmash","checkSnakeBiteItSelf","pop","forEach","snakePieces","checkEatFruit","fruitCoordinates","prevState","snakeGrow","currentTime","play","unshift","isGamePauseToggle","startGameHandler","volumeToggleHandler","window","addEventListener","this","keydownHandler","bind","callback","event","keyCode","setDirection","app","app__field","music","title","src","frameBorder","allow","allowFullScreen","music__player","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae92bc7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fruit\":\"Fruit_fruit__32-aM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1fB2b\",\"app__field\":\"App_app__field__1jCqw\",\"music\":\"App_music__2K5B8\",\"music__player\":\"App_music__player__2nfZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snake__piece\":\"Snake_snake__piece__1ePKK\",\"snake__head\":\"Snake_snake__head__Ibk3i\",\"snake__head_dead\":\"Snake_snake__head_dead__31w_8\"};","const constants = {\r\n  SIZE: 4,\r\n  FIELD_SIZE: '600px',\r\n  SPEED: 150,\r\n  SPEED_FAST: 50,\r\n  SPEED_STEP: 10,\r\n  MAX_POSITION: 98,\r\n  MIN_POSITION: 1,\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  LEFT: 'LEFT',\r\n  BOTTOM: 'BOTTOM',\r\n  SPACE_BETWEEN_SNAKE_PIECES: 2,\r\n  STARTING_SNAKE_POSITION: [\r\n    [0, 0],\r\n    [2, 0],\r\n    [4, 0],\r\n  ],\r\n  FRUIT_POSITION: () => [\r\n    Math.floor(\r\n      (Math.random() * constants.MAX_POSITION + constants.MIN_POSITION) /\r\n        constants.SIZE,\r\n    ) * constants.SIZE,\r\n    Math.floor(\r\n      (Math.random() * constants.MAX_POSITION + constants.MIN_POSITION) /\r\n        constants.SIZE,\r\n    ) * constants.SIZE,\r\n  ],\r\n};\r\n\r\nexport default constants;\r\n","import React from 'react';\r\nimport classes from './Snake.module.css';\r\nimport constants from '../../constants/constants';\r\n\r\nconst Snake = (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakePosition.map((snakePiece, index, arr) => {\r\n        const StartPositionStyles = {\r\n          left: `${snakePiece[0]}%`,\r\n          top: `${snakePiece[1]}%`,\r\n          width: `${props.size}%`,\r\n          height: `${props.size}%`,\r\n          transform: `${\r\n            props.direction === constants.LEFT\r\n              ? 'rotate(90deg)'\r\n              : props.direction === constants.TOP\r\n              ? 'rotate(180deg)'\r\n              : props.direction === constants.RIGHT\r\n              ? 'rotate(270deg)'\r\n              : 'rotate(0deg)'\r\n          }`,\r\n        };\r\n        return index === arr.length - 1 ? (\r\n          <div\r\n            key={index}\r\n            className={`${classes.snake__piece} ${classes.snake__head} ${\r\n              props.isGameOver ? classes.snake__head_dead : ''\r\n            }`}\r\n            style={StartPositionStyles}\r\n          ></div>\r\n        ) : (\r\n          <div\r\n            key={index}\r\n            className={classes.snake__piece}\r\n            style={StartPositionStyles}\r\n          ></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snake;\r\n","import React from 'react';\r\nimport classes from './Fruit.module.css';\r\n\r\nconst Fruit = (props) => {\r\n  const fruitPositionStyle = {\r\n    left: `${props.fruitPosition[0]}%`,\r\n    top: `${props.fruitPosition[1]}%`,\r\n    width: `${props.size}%`,\r\n    height: `${props.size}%`,\r\n  };\r\n  return <div className={classes.fruit} style={fruitPositionStyle}></div>;\r\n};\r\n\r\nexport default Fruit;\r\n","import React from 'react';\r\nimport classes from './Controls.module.css';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\n\r\nconst Controls = (props) => {\r\n  const volumeIcon = props.isVolume ? (\r\n    <VolumeUpIcon style={{ color: 'white' }}></VolumeUpIcon>\r\n  ) : (\r\n    <VolumeOffIcon style={{ color: 'white' }}></VolumeOffIcon>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.controls__wrapper}>\r\n      <div className={classes.controls__score}>Score: {props.score}</div>\r\n      <button\r\n        onClick={props.clicked}\r\n        className={classes['controls__start-btn']}\r\n      >\r\n        Start Game\r\n      </button>\r\n      <button onClick={props.volumeToggle} className={classes.controls__volume}>\r\n        {volumeIcon}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","export default __webpack_public_path__ + \"static/media/bite.1e6ccb0d.mp3\";","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Snake from '../components/Snake/Snake';\nimport Fruit from '../components/Fruit/Fruit';\nimport constants from '../constants/constants';\nimport Controls from '../components/Controls/Controls';\nimport biteSound from '../assets/bite.mp3';\n\nclass App extends Component {\n  state = {\n    snakePosition: constants.STARTING_SNAKE_POSITION,\n    direction: constants.RIGHT,\n    speed: constants.SPEED,\n    fruitPosition: constants.FRUIT_POSITION(),\n    isGameOver: false,\n    isGamePause: true,\n    score: 0,\n    isVolume: true,\n  };\n\n  audio = new Audio(biteSound);\n  fieldStyles = {\n    maxWidth: `${constants.FIELD_SIZE}`,\n    height: `${constants.FIELD_SIZE}`,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.keydownHandler.bind(this));\n  }\n\n  componentDidUpdate() {\n    this.checkWallSmash();\n    this.checkSnakeBiteItSelf();\n    this.checkEatFruit();\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  keydownHandler(event) {\n    switch (event.keyCode) {\n      case 37:\n      case 65:\n        if (\n          this.state.direction !== constants.RIGHT &&\n          !this.state.isGamePause &&\n          !this.state.isGameOver\n        ) {\n          this.setDirection(constants.LEFT);\n          this.moveSnake();\n        }\n        break;\n      case 38:\n      case 87:\n        if (\n          this.state.direction !== constants.BOTTOM &&\n          !this.state.isGamePause &&\n          !this.state.isGameOver\n        ) {\n          this.setState({ direction: constants.TOP });\n          this.moveSnake();\n        }\n        break;\n      case 39:\n      case 68:\n        if (\n          this.state.direction !== constants.LEFT &&\n          !this.state.isGamePause &&\n          !this.state.isGameOver\n        ) {\n          this.setState({ direction: constants.RIGHT });\n          this.moveSnake();\n        }\n        break;\n      case 40:\n      case 83:\n        if (\n          this.state.direction !== constants.TOP &&\n          !this.state.isGamePause &&\n          !this.state.isGameOver\n        ) {\n          this.setState({ direction: constants.BOTTOM });\n          this.moveSnake();\n        }\n        break;\n      case 27:\n        this.setState((prevState) => {\n          return {\n            isGamePause: !prevState.isGamePause,\n          };\n        });\n        this.isGamePauseToggle();\n        break;\n      default:\n    }\n  }\n\n  setDirection(direction) {\n    this.setState({ direction: direction });\n  }\n\n  moveSnake = () => {\n    if (this.state.isGameOver) {\n      clearInterval(this.state.intervalId);\n      const newIntervalId = setInterval(this.moveSnake, this.state.speed);\n\n      this.setState({\n        intervalId: newIntervalId,\n        isGameOver: false,\n        speed: constants.SPEED,\n      });\n    }\n\n    const snakeCoordinates = [...this.state.snakePosition];\n    let headCoordinates = snakeCoordinates[snakeCoordinates.length - 1];\n\n    switch (this.state.direction) {\n      case constants.LEFT:\n        headCoordinates = [\n          headCoordinates[0] - constants.SPACE_BETWEEN_SNAKE_PIECES,\n          headCoordinates[1],\n        ];\n        break;\n      case constants.TOP:\n        headCoordinates = [\n          headCoordinates[0],\n          headCoordinates[1] - constants.SPACE_BETWEEN_SNAKE_PIECES,\n        ];\n        break;\n      case constants.RIGHT:\n        headCoordinates = [\n          headCoordinates[0] + constants.SPACE_BETWEEN_SNAKE_PIECES,\n          headCoordinates[1],\n        ];\n        break;\n      case constants.BOTTOM:\n        headCoordinates = [\n          headCoordinates[0],\n          headCoordinates[1] + constants.SPACE_BETWEEN_SNAKE_PIECES,\n        ];\n        break;\n      default:\n    }\n\n    snakeCoordinates.push(headCoordinates);\n    snakeCoordinates.shift();\n\n    this.setState({\n      snakePosition: snakeCoordinates,\n    });\n  };\n\n  checkWallSmash = () => {\n    const headCoordinates = this.state.snakePosition[\n      this.state.snakePosition.length - 1\n    ];\n\n    if (\n      headCoordinates[0] < 0 ||\n      headCoordinates[0] >= constants.MAX_POSITION ||\n      headCoordinates[1] < 0 ||\n      headCoordinates[1] >= constants.MAX_POSITION\n    ) {\n      this.isGameOver();\n    }\n  };\n\n  checkSnakeBiteItSelf = () => {\n    const snakeCoordinates = [...this.state.snakePosition];\n    const headCoordinates = snakeCoordinates[snakeCoordinates.length - 1];\n\n    snakeCoordinates.pop();\n\n    snakeCoordinates.forEach((snakePieces) => {\n      if (\n        headCoordinates[0] === snakePieces[0] &&\n        headCoordinates[1] === snakePieces[1]\n      ) {\n        this.isGameOver();\n      }\n    });\n  };\n\n  checkEatFruit = () => {\n    const headCoordinates = this.state.snakePosition[\n      this.state.snakePosition.length - 1\n    ];\n    const fruitCoordinates = this.state.fruitPosition;\n\n    if (\n      headCoordinates[0] === fruitCoordinates[0] &&\n      headCoordinates[1] === fruitCoordinates[1]\n    ) {\n      this.setState((prevState) => {\n        if (prevState.speed > constants.SPEED_FAST) {\n          return {\n            fruitPosition: constants.FRUIT_POSITION(),\n            speed: prevState.speed - constants.SPEED_STEP,\n            score: this.state.snakePosition.length * constants.SPEED_STEP,\n          };\n        } else {\n          return {\n            fruitPosition: constants.FRUIT_POSITION(),\n            speed: prevState.speed - 1,\n            score: prevState.snakePosition.length * constants.SPEED_STEP,\n          };\n        }\n      });\n\n      clearInterval(this.state.intervalId);\n\n      const intervalId = setInterval(this.moveSnake, this.state.speed);\n      this.setState({ intervalId: intervalId });\n\n      this.snakeGrow();\n\n      if (this.state.isVolume) {\n        this.audio.currentTime = 0;\n        this.audio.play();\n      }\n    }\n  };\n\n  snakeGrow = () => {\n    const snakeCoordinates = [...this.state.snakePosition];\n\n    snakeCoordinates.unshift([]);\n\n    this.setState({\n      snakePosition: snakeCoordinates,\n    });\n  };\n\n  isGamePauseToggle = () => {\n    if (this.state.isGamePause) {\n      clearInterval(this.state.intervalId);\n      this.setState({\n        isGamePause: true,\n      });\n    } else if (!this.state.isGamePause) {\n      const newIntervalId = setInterval(this.moveSnake, this.state.speed);\n\n      this.setState({\n        intervalId: newIntervalId,\n        isGamePause: false,\n      });\n    }\n  };\n\n  isGameOver = () => {\n    this.setState({\n      snakePosition: constants.STARTING_SNAKE_POSITION,\n      direction: constants.RIGHT,\n      speed: constants.SPEED,\n      isGameOver: true,\n    });\n\n    clearInterval(this.state.intervalId);\n  };\n\n  startGameHandler = () => {\n    if (this.state.isGameOver || this.state.isGamePause) {\n      const intervalId = setInterval(this.moveSnake, this.state.speed);\n      this.setState({\n        intervalId: intervalId,\n        isGameOver: false,\n        isGamePause: false,\n        score: 0,\n      });\n    }\n  };\n\n  volumeToggleHandler = () => {\n    this.setState((prevState) => {\n      return {\n        isVolume: !prevState.isVolume,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className={classes.app}>\n        <Controls\n          clicked={this.startGameHandler.bind(this)}\n          score={this.state.score}\n          isVolume={this.state.isVolume}\n          volumeToggle={this.volumeToggleHandler}\n        />\n        <div className={classes.app__field} style={this.fieldStyles}>\n          <Snake\n            snakePosition={this.state.snakePosition}\n            direction={this.state.direction}\n            isGameOver={this.state.isGameOver}\n            size={constants.SIZE}\n          />\n          <Fruit\n            fruitPosition={this.state.fruitPosition}\n            size={constants.SIZE}\n          />\n        </div>\n        <div className={classes.music}>\n          <iframe\n            title=\"music\"\n            width=\"100%\"\n            height=\"100%\"\n            src=\"https://www.youtube.com/embed/DIi-pBpXIbE\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay;\"\n            allowFullScreen\n            className={classes.music__player}\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls__wrapper\":\"Controls_controls__wrapper__3j6Y5\",\"controls__score\":\"Controls_controls__score__2euP4\",\"controls__start-btn\":\"Controls_controls__start-btn__oq8_k\",\"controls__volume\":\"Controls_controls__volume__3uMnL\"};"],"sourceRoot":""}